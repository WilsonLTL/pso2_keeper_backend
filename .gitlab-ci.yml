stages:
#  - build
#  - test
  - deploy

#buildtest-python:
#  image: ubuntu:latest
#  stage: build
#  script:
#    - apt-get update -qy
#    - apt-get install -y python-dev python-pip
#    - pip install -r requirements.txt
#
#unittest-py27:
#  image: ubuntu:latest
#  stage: test
#  script:
#    - apt-get update -qy
#    - apt-get install -y python-dev python-pipls -a ~
#    - pip install -r requirements.txt
#    - nohup python Main.py &
#    - pocha unittest.py
#
#unittest-py34:
#  image: ubuntu:latest
#  stage: test
#  script:
#    - apt-get update -qy
#    - apt-get install -y python-dev python-pip
#    - pip install -r requirements.txt
#    - nohup python Main.py &
#    - pocha unittest.py
#
#docker-test:
#  image: docker:latest
#  services:
#    - docker:dind
#  stage: test
#  script:
#    - apk add --update \python \python-dev \py-pip \build-base \curl
#    - pip install -r requirements.txt
#    - docker login registry.gitlab.com -u wilsonlo1997@gmail.com -p Vi26151851@
#    - docker build -t registry.gitlab.com/wilsonltl/pso2_keeper_backend .
#    - docker run -d -p 8080:8080 registry.gitlab.com/wilsonltl/pso2_keeper_backend
#  only:
#    - master

docker-deploy:
  image: docker:latest
  services:
    - docker:dind
  stage: deploy
  script:
    - docker login registry.gitlab.com -u wilsonlo1997@gmail.com -p Vi26151851@
    - docker build -t registry.gitlab.com/wilsonltl/pso2_keeper_backend .
    - docker push registry.gitlab.com/wilsonltl/pso2_keeper_backend
  only:
    - master

eb-deploy:
  stage: deploy
  environment: production
  script:
    - mkdir ~/.aws/
    - touch ~/.aws/credentials
    - printf "[eb-cli]\naws_access_key_id = %s\naws_secret_access_key = %s\n" "$AWS_ACCESS_KEY_ID" "$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials
    - touch ~/.aws/config
    - printf "[profile eb-cli]\nregion=ap-southeast-1\noutput=json" >> ~/.aws/config
    - eb deploy
  tags:
    - eb-deploy
